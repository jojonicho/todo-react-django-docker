{"ast":null,"code":"import { forwardRef, useContext, createContext, createElement, useRef, useLayoutEffect } from 'react';\nimport createCache from '@emotion/cache';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport weakMemoize from '@emotion/weak-memoize';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { getRegisteredStyles, insertStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\nimport { StyleSheet } from '@emotion/sheet';\nvar EmotionCacheContext = /* #__PURE__ */createContext( // we're doing this to avoid preconstruct's dead code elimination in this one case\n// because this module is primarily intended for the browser and node\n// but it's also required in react native and similar environments sometimes\n// and we could have a special build just for that\n// but this is much easier and the native packages\n// might use a different theme context in the future anyway\ntypeof HTMLElement !== 'undefined' ? /* #__PURE__ */createCache({\n  key: 'css'\n}) : null);\nvar CacheProvider = EmotionCacheContext.Provider;\n\nvar withEmotionCache = function withEmotionCache(func) {\n  // $FlowFixMe\n  return forwardRef(function (props, ref) {\n    // the cache will never be null in the browser\n    var cache = useContext(EmotionCacheContext);\n    return func(props, cache, ref);\n  });\n};\n\nvar ThemeContext = createContext({});\n\nvar useTheme = function useTheme() {\n  return useContext(ThemeContext);\n};\n\nvar getTheme = function getTheme(outerTheme, theme) {\n  if (typeof theme === 'function') {\n    var mergedTheme = theme(outerTheme);\n\n    if (process.env.NODE_ENV !== 'production' && (mergedTheme == null || typeof mergedTheme !== 'object' || Array.isArray(mergedTheme))) {\n      throw new Error('[ThemeProvider] Please return an object from your theme function, i.e. theme={() => ({})}!');\n    }\n\n    return mergedTheme;\n  }\n\n  if (process.env.NODE_ENV !== 'production' && (theme == null || typeof theme !== 'object' || Array.isArray(theme))) {\n    throw new Error('[ThemeProvider] Please make your theme prop a plain object');\n  }\n\n  return _extends({}, outerTheme, {}, theme);\n};\n\nvar createCacheWithTheme = weakMemoize(function (outerTheme) {\n  return weakMemoize(function (theme) {\n    return getTheme(outerTheme, theme);\n  });\n});\n\nvar ThemeProvider = function ThemeProvider(props) {\n  var theme = useContext(ThemeContext);\n\n  if (props.theme !== theme) {\n    theme = createCacheWithTheme(theme)(props.theme);\n  }\n\n  return createElement(ThemeContext.Provider, {\n    value: theme\n  }, props.children);\n};\n\nfunction withTheme(Component) {\n  var componentName = Component.displayName || Component.name || 'Component';\n\n  var render = function render(props, ref) {\n    var theme = useContext(ThemeContext);\n    return createElement(Component, _extends({\n      theme: theme,\n      ref: ref\n    }, props));\n  }; // $FlowFixMe\n\n\n  var WithTheme = forwardRef(render);\n  WithTheme.displayName = \"WithTheme(\" + componentName + \")\";\n  return hoistNonReactStatics(WithTheme, Component);\n} // thus we only need to replace what is a valid character for JS, but not for CSS\n\n\nvar sanitizeIdentifier = function sanitizeIdentifier(identifier) {\n  return identifier.replace(/\\$/g, '-');\n};\n\nvar typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';\nvar labelPropName = '__EMOTION_LABEL_PLEASE_DO_NOT_USE__';\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar Emotion = withEmotionCache(function (props, cache, ref) {\n  var cssProp = props.css; // so that using `css` from `emotion` and passing the result to the css prop works\n  // not passing the registered cache to serializeStyles because it would\n  // make certain babel optimisations not possible\n\n  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {\n    cssProp = cache.registered[cssProp];\n  }\n\n  var type = props[typePropName];\n  var registeredStyles = [cssProp];\n  var className = '';\n\n  if (typeof props.className === 'string') {\n    className = getRegisteredStyles(cache.registered, registeredStyles, props.className);\n  } else if (props.className != null) {\n    className = props.className + \" \";\n  }\n\n  var serialized = serializeStyles(registeredStyles, undefined, typeof cssProp === 'function' || Array.isArray(cssProp) ? useContext(ThemeContext) : undefined);\n\n  if (process.env.NODE_ENV !== 'production' && serialized.name.indexOf('-') === -1) {\n    var labelFromStack = props[labelPropName];\n\n    if (labelFromStack) {\n      serialized = serializeStyles([serialized, 'label:' + labelFromStack + ';']);\n    }\n  }\n\n  var rules = insertStyles(cache, serialized, typeof type === 'string');\n  className += cache.key + \"-\" + serialized.name;\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key) && key !== 'css' && key !== typePropName && (process.env.NODE_ENV === 'production' || key !== labelPropName)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps.ref = ref;\n  newProps.className = className;\n  var ele = createElement(type, newProps);\n  return ele;\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Emotion.displayName = 'EmotionCssPropInternal';\n} // $FlowFixMe\n\n\nvar jsx = function jsx(type, props) {\n  var args = arguments;\n\n  if (props == null || !hasOwnProperty.call(props, 'css')) {\n    // $FlowFixMe\n    return createElement.apply(undefined, args);\n  }\n\n  if (process.env.NODE_ENV !== 'production' && typeof props.css === 'string' && // check if there is a css declaration\n  props.css.indexOf(':') !== -1) {\n    throw new Error(\"Strings are not allowed as css prop values, please wrap it in a css template literal from '@emotion/react' like this: css`\" + props.css + \"`\");\n  }\n\n  var argsLength = args.length;\n  var createElementArgArray = new Array(argsLength);\n  createElementArgArray[0] = Emotion;\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps[typePropName] = type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    var error = new Error();\n\n    if (error.stack) {\n      // chrome\n      var match = error.stack.match(/at (?:Object\\.|)jsx.*\\n\\s+at ([A-Z][A-Za-z$]+) /);\n\n      if (!match) {\n        // safari and firefox\n        match = error.stack.match(/.*\\n([A-Z][A-Za-z$]+)@/);\n      }\n\n      if (match) {\n        newProps[labelPropName] = sanitizeIdentifier(match[1]);\n      }\n    }\n  }\n\n  createElementArgArray[1] = newProps;\n\n  for (var i = 2; i < argsLength; i++) {\n    createElementArgArray[i] = args[i];\n  } // $FlowFixMe\n\n\n  return createElement.apply(null, createElementArgArray);\n};\n\nvar warnedAboutCssPropForGlobal = false; // maintain place over rerenders.\n// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\n// initial client-side render from SSR, use place of hydrating tag\n\nvar Global = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  if (process.env.NODE_ENV !== 'production' && !warnedAboutCssPropForGlobal && ( // check for className as well since the user is\n  // probably using the custom createElement which\n  // means it will be turned into a className prop\n  // $FlowFixMe I don't really want to add it to the type since it shouldn't be used\n  props.className || props.css)) {\n    console.error(\"It looks like you're using the css prop on Global, did you mean to use the styles prop instead?\");\n    warnedAboutCssPropForGlobal = true;\n  }\n\n  var styles = props.styles;\n  var serialized = serializeStyles([styles], undefined, typeof styles === 'function' || Array.isArray(styles) ? useContext(ThemeContext) : undefined); // but it is based on a constant that will never change at runtime\n  // it's effectively like having two implementations and switching them out\n  // so it's not actually breaking anything\n\n  var sheetRef = useRef();\n  useLayoutEffect(function () {\n    var key = cache.key + \"-global\";\n    var sheet = new StyleSheet({\n      key: key,\n      nonce: cache.sheet.nonce,\n      container: cache.sheet.container,\n      speedy: cache.sheet.isSpeedy\n    }); // $FlowFixMe\n\n    var node = document.querySelector(\"style[data-emotion=\\\"\" + key + \" \" + serialized.name + \"\\\"]\");\n\n    if (cache.sheet.tags.length) {\n      sheet.before = cache.sheet.tags[0];\n    }\n\n    if (node !== null) {\n      sheet.hydrate([node]);\n    }\n\n    sheetRef.current = sheet;\n    return function () {\n      sheet.flush();\n    };\n  }, [cache]);\n  useLayoutEffect(function () {\n    if (serialized.next !== undefined) {\n      // insert keyframes\n      insertStyles(cache, serialized.next, true);\n    }\n\n    var sheet = sheetRef.current;\n\n    if (sheet.tags.length) {\n      // if this doesn't exist then it will be null so the style element will be appended\n      var element = sheet.tags[sheet.tags.length - 1].nextElementSibling;\n      sheet.before = element;\n      sheet.flush();\n    }\n\n    cache.insert(\"\", serialized, sheet, false);\n  }, [cache, serialized.name]);\n  return null;\n});\n\nfunction css() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return serializeStyles(args);\n}\n\nvar keyframes = function keyframes() {\n  var insertable = css.apply(void 0, arguments);\n  var name = \"animation-\" + insertable.name; // $FlowFixMe\n\n  return {\n    name: name,\n    styles: \"@keyframes \" + name + \"{\" + insertable.styles + \"}\",\n    anim: 1,\n    toString: function toString() {\n      return \"_EMO_\" + this.name + \"_\" + this.styles + \"_EMO_\";\n    }\n  };\n};\n\nvar classnames = function classnames(args) {\n  var len = args.length;\n  var i = 0;\n  var cls = '';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            if (process.env.NODE_ENV !== 'production' && arg.styles !== undefined && arg.name !== undefined) {\n              console.error('You have passed styles created with `css` from `@emotion/react` package to the `cx`.\\n' + '`cx` is meant to compose class names (strings) so you should convert those styles to a class name by passing them to the `css` received from <ClassNames/> component.');\n            }\n\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar ClassNames = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  var hasRendered = false;\n\n  var css = function css() {\n    if (hasRendered && process.env.NODE_ENV !== 'production') {\n      throw new Error('css can only be used during render');\n    }\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    {\n      insertStyles(cache, serialized, false);\n    }\n    return cache.key + \"-\" + serialized.name;\n  };\n\n  var cx = function cx() {\n    if (hasRendered && process.env.NODE_ENV !== 'production') {\n      throw new Error('cx can only be used during render');\n    }\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return merge(cache.registered, css, classnames(args));\n  };\n\n  var content = {\n    css: css,\n    cx: cx,\n    theme: useContext(ThemeContext)\n  };\n  var ele = props.children(content);\n  hasRendered = true;\n  return ele;\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  var isBrowser = \"object\" !== 'undefined'; // #1727 for some reason Jest evaluates modules twice if some consuming module gets mocked with jest.mock\n\n  var isJest = typeof jest !== 'undefined';\n\n  if (isBrowser && !isJest) {\n    var globalContext = isBrowser ? window : global;\n    var globalKey = '__EMOTION_REACT__';\n\n    if (globalContext[globalKey]) {\n      console.warn('You are loading @emotion/react when it is already loaded. Running ' + 'multiple instances may cause problems. This can happen if multiple ' + 'versions are used, or if multiple builds of the same version are ' + 'used.');\n    }\n\n    globalContext[globalKey] = true;\n  }\n}\n\nexport { CacheProvider, ClassNames, Global, ThemeContext, ThemeProvider, css, jsx, keyframes, useTheme, withEmotionCache, withTheme };","map":{"version":3,"sources":["/Users/jonathannicholas/Desktop/devhaus/todo/web/node_modules/@emotion/react/dist/react.browser.esm.js"],"names":["forwardRef","useContext","createContext","createElement","useRef","useLayoutEffect","createCache","_extends","weakMemoize","hoistNonReactStatics","getRegisteredStyles","insertStyles","serializeStyles","StyleSheet","EmotionCacheContext","HTMLElement","key","CacheProvider","Provider","withEmotionCache","func","props","ref","cache","ThemeContext","useTheme","getTheme","outerTheme","theme","mergedTheme","process","env","NODE_ENV","Array","isArray","Error","createCacheWithTheme","ThemeProvider","value","children","withTheme","Component","componentName","displayName","name","render","WithTheme","sanitizeIdentifier","identifier","replace","typePropName","labelPropName","hasOwnProperty","Object","prototype","Emotion","cssProp","css","registered","undefined","type","registeredStyles","className","serialized","indexOf","labelFromStack","rules","newProps","call","ele","jsx","args","arguments","apply","argsLength","length","createElementArgArray","error","stack","match","i","warnedAboutCssPropForGlobal","Global","console","styles","sheetRef","sheet","nonce","container","speedy","isSpeedy","node","document","querySelector","tags","before","hydrate","current","flush","next","element","nextElementSibling","insert","_len","_key","keyframes","insertable","anim","toString","classnames","len","cls","arg","toAdd","k","merge","rawClassName","ClassNames","hasRendered","cx","_len2","_key2","content","isBrowser","isJest","jest","globalContext","window","global","globalKey","warn"],"mappings":"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","sourcesContent":["import { forwardRef, useContext, createContext, createElement, useRef, useLayoutEffect } from 'react';\nimport createCache from '@emotion/cache';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport weakMemoize from '@emotion/weak-memoize';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { getRegisteredStyles, insertStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\nimport { StyleSheet } from '@emotion/sheet';\n\nvar EmotionCacheContext =\n/* #__PURE__ */\ncreateContext( // we're doing this to avoid preconstruct's dead code elimination in this one case\n// because this module is primarily intended for the browser and node\n// but it's also required in react native and similar environments sometimes\n// and we could have a special build just for that\n// but this is much easier and the native packages\n// might use a different theme context in the future anyway\ntypeof HTMLElement !== 'undefined' ?\n/* #__PURE__ */\ncreateCache({\n  key: 'css'\n}) : null);\nvar CacheProvider = EmotionCacheContext.Provider;\n\nvar withEmotionCache = function withEmotionCache(func) {\n  // $FlowFixMe\n  return forwardRef(function (props, ref) {\n    // the cache will never be null in the browser\n    var cache = useContext(EmotionCacheContext);\n    return func(props, cache, ref);\n  });\n};\n\nvar ThemeContext = createContext({});\nvar useTheme = function useTheme() {\n  return useContext(ThemeContext);\n};\n\nvar getTheme = function getTheme(outerTheme, theme) {\n  if (typeof theme === 'function') {\n    var mergedTheme = theme(outerTheme);\n\n    if (process.env.NODE_ENV !== 'production' && (mergedTheme == null || typeof mergedTheme !== 'object' || Array.isArray(mergedTheme))) {\n      throw new Error('[ThemeProvider] Please return an object from your theme function, i.e. theme={() => ({})}!');\n    }\n\n    return mergedTheme;\n  }\n\n  if (process.env.NODE_ENV !== 'production' && (theme == null || typeof theme !== 'object' || Array.isArray(theme))) {\n    throw new Error('[ThemeProvider] Please make your theme prop a plain object');\n  }\n\n  return _extends({}, outerTheme, {}, theme);\n};\n\nvar createCacheWithTheme = weakMemoize(function (outerTheme) {\n  return weakMemoize(function (theme) {\n    return getTheme(outerTheme, theme);\n  });\n});\nvar ThemeProvider = function ThemeProvider(props) {\n  var theme = useContext(ThemeContext);\n\n  if (props.theme !== theme) {\n    theme = createCacheWithTheme(theme)(props.theme);\n  }\n\n  return createElement(ThemeContext.Provider, {\n    value: theme\n  }, props.children);\n};\nfunction withTheme(Component) {\n  var componentName = Component.displayName || Component.name || 'Component';\n\n  var render = function render(props, ref) {\n    var theme = useContext(ThemeContext);\n    return createElement(Component, _extends({\n      theme: theme,\n      ref: ref\n    }, props));\n  }; // $FlowFixMe\n\n\n  var WithTheme = forwardRef(render);\n  WithTheme.displayName = \"WithTheme(\" + componentName + \")\";\n  return hoistNonReactStatics(WithTheme, Component);\n}\n\n// thus we only need to replace what is a valid character for JS, but not for CSS\n\nvar sanitizeIdentifier = function sanitizeIdentifier(identifier) {\n  return identifier.replace(/\\$/g, '-');\n};\n\nvar typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';\nvar labelPropName = '__EMOTION_LABEL_PLEASE_DO_NOT_USE__';\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar Emotion = withEmotionCache(function (props, cache, ref) {\n  var cssProp = props.css; // so that using `css` from `emotion` and passing the result to the css prop works\n  // not passing the registered cache to serializeStyles because it would\n  // make certain babel optimisations not possible\n\n  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {\n    cssProp = cache.registered[cssProp];\n  }\n\n  var type = props[typePropName];\n  var registeredStyles = [cssProp];\n  var className = '';\n\n  if (typeof props.className === 'string') {\n    className = getRegisteredStyles(cache.registered, registeredStyles, props.className);\n  } else if (props.className != null) {\n    className = props.className + \" \";\n  }\n\n  var serialized = serializeStyles(registeredStyles, undefined, typeof cssProp === 'function' || Array.isArray(cssProp) ? useContext(ThemeContext) : undefined);\n\n  if (process.env.NODE_ENV !== 'production' && serialized.name.indexOf('-') === -1) {\n    var labelFromStack = props[labelPropName];\n\n    if (labelFromStack) {\n      serialized = serializeStyles([serialized, 'label:' + labelFromStack + ';']);\n    }\n  }\n\n  var rules = insertStyles(cache, serialized, typeof type === 'string');\n  className += cache.key + \"-\" + serialized.name;\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key) && key !== 'css' && key !== typePropName && (process.env.NODE_ENV === 'production' || key !== labelPropName)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps.ref = ref;\n  newProps.className = className;\n  var ele = createElement(type, newProps);\n\n  return ele;\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Emotion.displayName = 'EmotionCssPropInternal';\n} // $FlowFixMe\n\n\nvar jsx = function jsx(type, props) {\n  var args = arguments;\n\n  if (props == null || !hasOwnProperty.call(props, 'css')) {\n    // $FlowFixMe\n    return createElement.apply(undefined, args);\n  }\n\n  if (process.env.NODE_ENV !== 'production' && typeof props.css === 'string' && // check if there is a css declaration\n  props.css.indexOf(':') !== -1) {\n    throw new Error(\"Strings are not allowed as css prop values, please wrap it in a css template literal from '@emotion/react' like this: css`\" + props.css + \"`\");\n  }\n\n  var argsLength = args.length;\n  var createElementArgArray = new Array(argsLength);\n  createElementArgArray[0] = Emotion;\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps[typePropName] = type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    var error = new Error();\n\n    if (error.stack) {\n      // chrome\n      var match = error.stack.match(/at (?:Object\\.|)jsx.*\\n\\s+at ([A-Z][A-Za-z$]+) /);\n\n      if (!match) {\n        // safari and firefox\n        match = error.stack.match(/.*\\n([A-Z][A-Za-z$]+)@/);\n      }\n\n      if (match) {\n        newProps[labelPropName] = sanitizeIdentifier(match[1]);\n      }\n    }\n  }\n\n  createElementArgArray[1] = newProps;\n\n  for (var i = 2; i < argsLength; i++) {\n    createElementArgArray[i] = args[i];\n  } // $FlowFixMe\n\n\n  return createElement.apply(null, createElementArgArray);\n};\n\nvar warnedAboutCssPropForGlobal = false; // maintain place over rerenders.\n// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\n// initial client-side render from SSR, use place of hydrating tag\n\nvar Global =\n/* #__PURE__ */\nwithEmotionCache(function (props, cache) {\n  if (process.env.NODE_ENV !== 'production' && !warnedAboutCssPropForGlobal && ( // check for className as well since the user is\n  // probably using the custom createElement which\n  // means it will be turned into a className prop\n  // $FlowFixMe I don't really want to add it to the type since it shouldn't be used\n  props.className || props.css)) {\n    console.error(\"It looks like you're using the css prop on Global, did you mean to use the styles prop instead?\");\n    warnedAboutCssPropForGlobal = true;\n  }\n\n  var styles = props.styles;\n  var serialized = serializeStyles([styles], undefined, typeof styles === 'function' || Array.isArray(styles) ? useContext(ThemeContext) : undefined);\n  // but it is based on a constant that will never change at runtime\n  // it's effectively like having two implementations and switching them out\n  // so it's not actually breaking anything\n\n\n  var sheetRef = useRef();\n  useLayoutEffect(function () {\n    var key = cache.key + \"-global\";\n    var sheet = new StyleSheet({\n      key: key,\n      nonce: cache.sheet.nonce,\n      container: cache.sheet.container,\n      speedy: cache.sheet.isSpeedy\n    }); // $FlowFixMe\n\n    var node = document.querySelector(\"style[data-emotion=\\\"\" + key + \" \" + serialized.name + \"\\\"]\");\n\n    if (cache.sheet.tags.length) {\n      sheet.before = cache.sheet.tags[0];\n    }\n\n    if (node !== null) {\n      sheet.hydrate([node]);\n    }\n\n    sheetRef.current = sheet;\n    return function () {\n      sheet.flush();\n    };\n  }, [cache]);\n  useLayoutEffect(function () {\n    if (serialized.next !== undefined) {\n      // insert keyframes\n      insertStyles(cache, serialized.next, true);\n    }\n\n    var sheet = sheetRef.current;\n\n    if (sheet.tags.length) {\n      // if this doesn't exist then it will be null so the style element will be appended\n      var element = sheet.tags[sheet.tags.length - 1].nextElementSibling;\n      sheet.before = element;\n      sheet.flush();\n    }\n\n    cache.insert(\"\", serialized, sheet, false);\n  }, [cache, serialized.name]);\n  return null;\n});\n\nfunction css() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return serializeStyles(args);\n}\n\nvar keyframes = function keyframes() {\n  var insertable = css.apply(void 0, arguments);\n  var name = \"animation-\" + insertable.name; // $FlowFixMe\n\n  return {\n    name: name,\n    styles: \"@keyframes \" + name + \"{\" + insertable.styles + \"}\",\n    anim: 1,\n    toString: function toString() {\n      return \"_EMO_\" + this.name + \"_\" + this.styles + \"_EMO_\";\n    }\n  };\n};\n\nvar classnames = function classnames(args) {\n  var len = args.length;\n  var i = 0;\n  var cls = '';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            if (process.env.NODE_ENV !== 'production' && arg.styles !== undefined && arg.name !== undefined) {\n              console.error('You have passed styles created with `css` from `@emotion/react` package to the `cx`.\\n' + '`cx` is meant to compose class names (strings) so you should convert those styles to a class name by passing them to the `css` received from <ClassNames/> component.');\n            }\n\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar ClassNames =\n/* #__PURE__ */\nwithEmotionCache(function (props, cache) {\n  var hasRendered = false;\n\n  var css = function css() {\n    if (hasRendered && process.env.NODE_ENV !== 'production') {\n      throw new Error('css can only be used during render');\n    }\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n\n    {\n      insertStyles(cache, serialized, false);\n    }\n\n    return cache.key + \"-\" + serialized.name;\n  };\n\n  var cx = function cx() {\n    if (hasRendered && process.env.NODE_ENV !== 'production') {\n      throw new Error('cx can only be used during render');\n    }\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return merge(cache.registered, css, classnames(args));\n  };\n\n  var content = {\n    css: css,\n    cx: cx,\n    theme: useContext(ThemeContext)\n  };\n  var ele = props.children(content);\n  hasRendered = true;\n\n  return ele;\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  var isBrowser = \"object\" !== 'undefined'; // #1727 for some reason Jest evaluates modules twice if some consuming module gets mocked with jest.mock\n\n  var isJest = typeof jest !== 'undefined';\n\n  if (isBrowser && !isJest) {\n    var globalContext = isBrowser ? window : global;\n    var globalKey = '__EMOTION_REACT__';\n\n    if (globalContext[globalKey]) {\n      console.warn('You are loading @emotion/react when it is already loaded. Running ' + 'multiple instances may cause problems. This can happen if multiple ' + 'versions are used, or if multiple builds of the same version are ' + 'used.');\n    }\n\n    globalContext[globalKey] = true;\n  }\n}\n\nexport { CacheProvider, ClassNames, Global, ThemeContext, ThemeProvider, css, jsx, keyframes, useTheme, withEmotionCache, withTheme };\n"]},"metadata":{},"sourceType":"module"}