{"ast":null,"code":"import _slicedToArray from \"/Users/jonathannicholas/Desktop/reactstuff/todo/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/jonathannicholas/Desktop/reactstuff/todo/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/jonathannicholas/Desktop/reactstuff/todo/web/src/components/TodoList/Todo/index.tsx\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  align-items: center;\\n  // flex-wrap: wrap;\\n  // backdrop-filter: blur(40px) contrast(0.8);\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  input {\\n    width: 40vw;\\n  }\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport { Title, Button, Input } from \"../../../ui-kit\"; // import { ReactComponent as Check } from \"../../../static/check.svg\";\n// import { ReactComponent as Uncheck } from \"../../../static/uncheck.svg\";\n\nimport styled from \"@emotion/styled/\";\nimport { useForm } from \"react-hook-form\";\nvar Form = styled.form(_templateObject());\nexport var RowContainer = styled.div(_templateObject2());\nexport var Todo = function Todo(_ref) {\n  var todo = _ref.todo,\n      updateTodo = _ref.updateTodo,\n      deleteTodo = _ref.deleteTodo;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      edit = _useState2[0],\n      setEdit = _useState2[1];\n\n  var _useForm = useForm({\n    defaultValues: {\n      name: todo.name\n    }\n  }),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register;\n\n  var onSubmit = function onSubmit(values) {\n    updateTodo(todo.id, values.name, todo.completed);\n  };\n\n  return /*#__PURE__*/React.createElement(RowContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      return updateTodo(todo.id, todo.name, !todo.completed);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, todo.completed ? \"undo\" : \"finish\"), edit ? /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"name\",\n    autoFocus: true,\n    ref: register,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"RED\",\n    onClick: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Update\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, todo.completed ? /*#__PURE__*/React.createElement(\"s\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 36\n    }\n  }, todo.name) : todo.name), /*#__PURE__*/React.createElement(RowContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      return setEdit(function (v) {\n        return !v;\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"RED\",\n    onClick: function onClick() {\n      return deleteTodo(todo.id);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Delete\"))));\n};","map":{"version":3,"sources":["/Users/jonathannicholas/Desktop/reactstuff/todo/web/src/components/TodoList/Todo/index.tsx"],"names":["React","useState","Title","Button","Input","styled","useForm","Form","form","RowContainer","div","Todo","todo","updateTodo","deleteTodo","edit","setEdit","defaultValues","name","handleSubmit","register","onSubmit","values","id","completed","v"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { TodoType } from \"../../../utils/types\";\nimport { Title, Button, Input } from \"../../../ui-kit\";\n// import { ReactComponent as Check } from \"../../../static/check.svg\";\n// import { ReactComponent as Uncheck } from \"../../../static/uncheck.svg\";\nimport styled from \"@emotion/styled/\";\nimport { useForm } from \"react-hook-form\";\n\ninterface TodoProps {\n  todo: TodoType;\n  updateTodo: any;\n  deleteTodo: any;\n}\n\nconst Form = styled.form`\n  input {\n    width: 40vw;\n  }\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nexport const RowContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  // flex-wrap: wrap;\n  // backdrop-filter: blur(40px) contrast(0.8);\n`;\n\nexport const Todo: React.FC<TodoProps> = ({ todo, updateTodo, deleteTodo }) => {\n  const [edit, setEdit] = useState(false);\n  const { handleSubmit, register } = useForm({\n    defaultValues: {\n      name: todo.name,\n    },\n  });\n  const onSubmit = (values: any) => {\n    updateTodo(todo.id, values.name, todo.completed);\n  };\n  return (\n    <RowContainer>\n      {/* {todo.completed ? (\n          <Check\n            onClick={() => updateTodo(todo.id, todo.name, !todo.completed)}\n          />\n        ) : (\n          <Uncheck\n            onClick={() => updateTodo(todo.id, todo.name, !todo.completed)}\n          />\n        )} */}\n      <Button onClick={() => updateTodo(todo.id, todo.name, !todo.completed)}>\n        {todo.completed ? \"undo\" : \"finish\"}\n      </Button>\n      {edit ? (\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <Input name=\"name\" autoFocus ref={register} />\n          <Button color=\"RED\" onClick={handleSubmit(onSubmit)}>\n            Update\n          </Button>\n        </Form>\n      ) : (\n        <>\n          <Title>{todo.completed ? <s>{todo.name}</s> : todo.name}</Title>\n          <RowContainer>\n            <Button onClick={() => setEdit((v) => !v)}>Edit</Button>\n            <Button color=\"RED\" onClick={() => deleteTodo(todo.id)}>\n              Delete\n            </Button>\n          </RowContainer>\n        </>\n      )}\n    </RowContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}