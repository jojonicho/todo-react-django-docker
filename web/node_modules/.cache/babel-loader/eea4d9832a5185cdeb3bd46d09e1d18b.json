{"ast":null,"code":"import _slicedToArray from \"/Users/jonathannicholas/Desktop/devhaus/todo/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/jonathannicholas/Desktop/devhaus/todo/web/src/components/Todo/index.tsx\";\n\nimport React, { useState } from \"react\";\nimport { Container, RowContainer, Title, Button } from \"../../ui-kit\"; // import { ReactComponent as Check } from \"../../static/check.svg\";\n\nimport { ReactComponent as Check } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../static/check.svg\";\nimport { ReactComponent as Uncheck } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../static/uncheck.svg\";\nexport var Todo = function Todo(_ref) {\n  var todo = _ref.todo,\n      updateTodo = _ref.updateTodo,\n      deleteTodo = _ref.deleteTodo;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      edit = _useState2[0],\n      setEdit = _useState2[1];\n\n  console.log(edit);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(RowContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, todo.completed ? /*#__PURE__*/React.createElement(Check, {\n    onClick: function onClick() {\n      return updateTodo(todo.id, todo.name, !todo.completed);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(Uncheck, {\n    onClick: function onClick() {\n      return updateTodo(todo.id, todo.name, !todo.completed);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }), !edit ? /*#__PURE__*/React.createElement(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, todo.completed ? /*#__PURE__*/React.createElement(\"s\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 36\n    }\n  }, todo.name) : todo.name) : /*#__PURE__*/React.createElement(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, todo.completed ? /*#__PURE__*/React.createElement(\"s\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 36\n    }\n  }, todo.name) : todo.name), /*#__PURE__*/React.createElement(RowContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick(v) {\n      return setEdit(!v);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"RED\",\n    onClick: function onClick() {\n      return deleteTodo(todo.id);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Delete\"))));\n};","map":{"version":3,"sources":["/Users/jonathannicholas/Desktop/devhaus/todo/web/src/components/Todo/index.tsx"],"names":["React","useState","Container","RowContainer","Title","Button","Todo","todo","updateTodo","deleteTodo","edit","setEdit","console","log","completed","id","name","v"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,cAAvD,C,CACA;;;;AAUA,OAAO,IAAMC,IAAyB,GAAG,SAA5BA,IAA4B,OAAsC;AAAA,MAAnCC,IAAmC,QAAnCA,IAAmC;AAAA,MAA7BC,UAA6B,QAA7BA,UAA6B;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,kBACrDR,QAAQ,CAAC,KAAD,CAD6C;AAAA;AAAA,MACtES,IADsE;AAAA,MAChEC,OADgE;;AAE7EC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,IAAI,CAACO,SAAL,gBACC,oBAAC,KAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMN,UAAU,CAACD,IAAI,CAACQ,EAAN,EAAUR,IAAI,CAACS,IAAf,EAAqB,CAACT,IAAI,CAACO,SAA3B,CAAhB;AAAA,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAKC,oBAAC,OAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMN,UAAU,CAACD,IAAI,CAACQ,EAAN,EAAUR,IAAI,CAACS,IAAf,EAAqB,CAACT,IAAI,CAACO,SAA3B,CAAhB;AAAA,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAUG,CAACJ,IAAD,gBACC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQH,IAAI,CAACO,SAAL,gBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,IAAI,CAACS,IAAT,CAAjB,GAAsCT,IAAI,CAACS,IAAnD,CADD,gBAGC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQT,IAAI,CAACO,SAAL,gBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,IAAI,CAACS,IAAT,CAAjB,GAAsCT,IAAI,CAACS,IAAnD,CAbJ,eAeE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,iBAACC,CAAD;AAAA,aAAON,OAAO,CAAC,CAACM,CAAF,CAAd;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAoB,IAAA,OAAO,EAAE;AAAA,aAAMR,UAAU,CAACF,IAAI,CAACQ,EAAN,CAAhB;AAAA,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CAfF,CADF,CADF;AA0BD,CA7BM","sourcesContent":["import React, { useState } from \"react\";\nimport { TodoType } from \"../../utils/types\";\nimport { Container, RowContainer, Title, Button } from \"../../ui-kit\";\n// import { ReactComponent as Check } from \"../../static/check.svg\";\nimport { ReactComponent as Check } from \"../../static/check.svg\";\nimport { ReactComponent as Uncheck } from \"../../static/uncheck.svg\";\n\ninterface TodoProps {\n  todo: TodoType;\n  updateTodo: any;\n  deleteTodo: any;\n}\n\nexport const Todo: React.FC<TodoProps> = ({ todo, updateTodo, deleteTodo }) => {\n  const [edit, setEdit] = useState(false);\n  console.log(edit);\n  return (\n    <Container>\n      <RowContainer>\n        {todo.completed ? (\n          <Check\n            onClick={() => updateTodo(todo.id, todo.name, !todo.completed)}\n          />\n        ) : (\n          <Uncheck\n            onClick={() => updateTodo(todo.id, todo.name, !todo.completed)}\n          />\n        )}\n        {!edit ? (\n          <Title>{todo.completed ? <s>{todo.name}</s> : todo.name}</Title>\n        ) : (\n          <Title>{todo.completed ? <s>{todo.name}</s> : todo.name}</Title>\n        )}\n        <RowContainer>\n          <Button onClick={(v) => setEdit(!v)}>Edit</Button>\n          <Button color=\"RED\" onClick={() => deleteTodo(todo.id)}>\n            Delete\n          </Button>\n        </RowContainer>\n      </RowContainer>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}