{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jonathannicholas/Desktop/reactstuff/todo/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jonathannicholas/Desktop/reactstuff/todo/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/jonathannicholas/Desktop/reactstuff/todo/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/jonathannicholas/Desktop/reactstuff/todo/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/jonathannicholas/Desktop/reactstuff/todo/web/src/components/Routes.tsx\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n          *,\\n          *:before,\\n          *:after {\\n            box-sizing: border-box;\\n            margin: 0;\\n            padding: 0;\\n          }\\n          html {\\n            text-rendering: optimizeLegibility;\\n            overflow-x: hidden;\\n            -ms-overflow-style: scrollbar;\\n            -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\\n            -webkit-font-smoothing: antialiased;\\n            -moz-osx-font-smoothing: grayscale;\\n          }\\n          body {\\n            display: flex;\\n            flex-direction: column;\\n            background: \", \";\\n            font-family: \", \";\\n            background-color: #8ec5fc;\\n            background-image: linear-gradient(62deg, #8ec5fc 0%, #e0c3fc 100%);\\n          }\\n          h1 {\\n            font-family: \", \";\\n          }\\n          input {\\n            border: none;\\n          }\\n          button {\\n            cursor: pointer;\\n          }\\n          textarea:focus,\\n          button:focus,\\n          input:focus {\\n            outline: none;\\n          }\\n        \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 15px 20vw;\\n  @media (max-width: \", \") {\\n    margin: 10px;\\n  }\\n  transition: \", \";\\n  color: \", \";\\n  font-weight: bold;\\n  overflow: hidden;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useCallback } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { theme } from \"../utils/theme\";\nimport { css, Global, ThemeProvider } from \"@emotion/react\";\nimport \"typeface-overpass\";\nimport { Home } from \"../pages\";\nimport styled from \"@emotion/styled\";\nimport GoogleLogin from \"react-google-login\";\nimport { AUTH_TOKEN_STORAGE_KEY, API_URL } from \"../constants\";\nvar Wrapper = styled.div(_templateObject(), function (_ref) {\n  var theme = _ref.theme;\n  return theme.breakpoints.s;\n}, function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.transitions.boom.transition;\n}, function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.colors.white.base;\n});\nexport var Routes = function Routes() {\n  var _useState = useState(Boolean(localStorage.getItem(AUTH_TOKEN_STORAGE_KEY))),\n      _useState2 = _slicedToArray(_useState, 2),\n      isAuthenticated = _useState2[0],\n      setIsAuthenticated = _useState2[1];\n\n  var refreshAuthStatus = useCallback(function () {\n    setIsAuthenticated(Boolean(localStorage.getItem(AUTH_TOKEN_STORAGE_KEY)));\n  }, []);\n  var headers = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  });\n  var login = useCallback( /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(token) {\n      var response, authToken;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(token);\n              console.log(token.accessToken);\n              _context.next = 4;\n              return fetch(\"\".concat(API_URL, \"/rest-auth/google/\"), {\n                headers,\n                method: \"POST\",\n                body: JSON.stringify({\n                  access_token: token.accessToken,\n                  code: \"\"\n                })\n              });\n\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              authToken = _context.sent;\n              console.log(authToken);\n              localStorage.setItem(AUTH_TOKEN_STORAGE_KEY, authToken.key);\n              refreshAuthStatus();\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }(), [refreshAuthStatus]);\n\n  var responseGoogle = function responseGoogle(response) {\n    console.log(response);\n  };\n\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Global, {\n    styles: css(_templateObject2(), theme.colors.white.background, theme.fontFamily.body, theme.fontFamily.heading),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Wrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, !isAuthenticated ? /*#__PURE__*/React.createElement(Switch, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Home,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n    buttonText: \"Login with Google\",\n    onSuccess: function onSuccess(token) {\n      return login(token);\n    },\n    onFailure: responseGoogle,\n    cookiePolicy: \"single_host_origin\",\n    isSignedIn: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/jonathannicholas/Desktop/reactstuff/todo/web/src/components/Routes.tsx"],"names":["React","useState","useCallback","BrowserRouter","Switch","Route","theme","css","Global","ThemeProvider","Home","styled","GoogleLogin","AUTH_TOKEN_STORAGE_KEY","API_URL","Wrapper","div","breakpoints","s","transitions","boom","transition","colors","white","base","Routes","Boolean","localStorage","getItem","isAuthenticated","setIsAuthenticated","refreshAuthStatus","headers","Headers","Accept","login","token","console","log","accessToken","fetch","method","body","JSON","stringify","access_token","code","response","json","authToken","setItem","key","responseGoogle","background","fontFamily","heading","process","env","REACT_APP_GOOGLE_CLIENT_ID"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { theme } from \"../utils/theme\";\nimport { css, Global, ThemeProvider } from \"@emotion/react\";\nimport \"typeface-overpass\";\nimport { Home } from \"../pages\";\nimport styled from \"@emotion/styled\";\nimport GoogleLogin from \"react-google-login\";\nimport { AUTH_TOKEN_STORAGE_KEY, API_URL } from \"../constants\";\n\nconst Wrapper = styled.div`\n  margin: 15px 20vw;\n  @media (max-width: ${({ theme }) => theme.breakpoints.s}) {\n    margin: 10px;\n  }\n  transition: ${({ theme }) => theme.transitions.boom.transition};\n  color: ${({ theme }) => theme.colors.white.base};\n  font-weight: bold;\n  overflow: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nexport const Routes: React.FC = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState(\n    Boolean(localStorage.getItem(AUTH_TOKEN_STORAGE_KEY))\n  );\n\n  const refreshAuthStatus = useCallback(() => {\n    setIsAuthenticated(Boolean(localStorage.getItem(AUTH_TOKEN_STORAGE_KEY)));\n  }, []);\n  const headers = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n  });\n  const login = useCallback(\n    async (token: any) => {\n      console.log(token);\n      console.log(token.accessToken);\n      const response = await fetch(`${API_URL}/rest-auth/google/`, {\n        headers,\n        method: \"POST\",\n        body: JSON.stringify({ access_token: token.accessToken, code: \"\" }),\n      });\n      const authToken = await response.json();\n      console.log(authToken);\n      localStorage.setItem(AUTH_TOKEN_STORAGE_KEY, authToken.key);\n      refreshAuthStatus();\n    },\n    [refreshAuthStatus]\n  );\n  const responseGoogle = (response: any) => {\n    console.log(response);\n  };\n  return (\n    <ThemeProvider theme={theme}>\n      <Global\n        styles={css`\n          *,\n          *:before,\n          *:after {\n            box-sizing: border-box;\n            margin: 0;\n            padding: 0;\n          }\n          html {\n            text-rendering: optimizeLegibility;\n            overflow-x: hidden;\n            -ms-overflow-style: scrollbar;\n            -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n            -webkit-font-smoothing: antialiased;\n            -moz-osx-font-smoothing: grayscale;\n          }\n          body {\n            display: flex;\n            flex-direction: column;\n            background: ${theme.colors.white.background};\n            font-family: ${theme.fontFamily.body};\n            background-color: #8ec5fc;\n            background-image: linear-gradient(62deg, #8ec5fc 0%, #e0c3fc 100%);\n          }\n          h1 {\n            font-family: ${theme.fontFamily.heading};\n          }\n          input {\n            border: none;\n          }\n          button {\n            cursor: pointer;\n          }\n          textarea:focus,\n          button:focus,\n          input:focus {\n            outline: none;\n          }\n        `}\n      />\n      <BrowserRouter>\n        <Wrapper>\n          {!isAuthenticated ? (\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n            </Switch>\n          ) : (\n            <GoogleLogin\n              clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID!}\n              buttonText=\"Login with Google\"\n              onSuccess={(token) => login(token)}\n              onFailure={responseGoogle}\n              cookiePolicy={\"single_host_origin\"}\n              isSignedIn={true}\n            />\n          )}\n        </Wrapper>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}