{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jonathannicholas/Desktop/reactstuff/todo/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jonathannicholas/Desktop/reactstuff/todo/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/jonathannicholas/Desktop/reactstuff/todo/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/jonathannicholas/Desktop/reactstuff/todo/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/jonathannicholas/Desktop/reactstuff/todo/web/src/components/Routes.tsx\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n          *,\\n          *:before,\\n          *:after {\\n            box-sizing: border-box;\\n            margin: 0;\\n            padding: 0;\\n          }\\n          html {\\n            text-rendering: optimizeLegibility;\\n            overflow-x: hidden;\\n            -ms-overflow-style: scrollbar;\\n            -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\\n            -webkit-font-smoothing: antialiased;\\n            -moz-osx-font-smoothing: grayscale;\\n          }\\n          body {\\n            display: flex;\\n            flex-direction: column;\\n            background: \", \";\\n            font-family: \", \";\\n            background-color: #8ec5fc;\\n            background-image: linear-gradient(62deg, #8ec5fc 0%, #e0c3fc 100%);\\n          }\\n          h1 {\\n            font-family: \", \";\\n          }\\n          input {\\n            border: none;\\n          }\\n          button {\\n            cursor: pointer;\\n          }\\n          textarea:focus,\\n          button:focus,\\n          input:focus {\\n            outline: none;\\n          }\\n        \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 15px 20vw;\\n  @media (max-width: \", \") {\\n    margin: 10px;\\n  }\\n  transition: \", \";\\n  color: \", \";\\n  font-weight: bold;\\n  overflow: hidden;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useCallback, useMemo } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { theme } from \"../utils/theme\";\nimport { css, Global, ThemeProvider } from \"@emotion/react\";\nimport \"typeface-overpass\";\nimport { Home } from \"../pages\";\nimport styled from \"@emotion/styled\";\nimport GoogleLogin from \"react-google-login\";\nimport { AUTH_TOKEN_STORAGE_KEY, API_URL, headers } from \"../constants\";\nvar Wrapper = styled.div(_templateObject(), function (_ref) {\n  var theme = _ref.theme;\n  return theme.breakpoints.s;\n}, function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.transitions.boom.transition;\n}, function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.colors.white.base;\n});\nexport var Routes = function Routes() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var value = useMemo(function () {\n    return {\n      user,\n      setUser\n    };\n  }, [user, setUser]);\n\n  var _useState3 = useState(Boolean(localStorage.getItem(AUTH_TOKEN_STORAGE_KEY))),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isAuthenticated = _useState4[0],\n      setIsAuthenticated = _useState4[1];\n\n  console.log(isAuthenticated);\n  var refreshAuthStatus = useCallback(function () {\n    setIsAuthenticated(Boolean(localStorage.getItem(AUTH_TOKEN_STORAGE_KEY)));\n  }, []);\n  var getUser = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var response, json;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"\".concat(API_URL, \"/todos/current-user\"), {\n              headers,\n              method: \"GET\"\n            });\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.json();\n\n          case 5:\n            json = _context.sent;\n            console.log(json);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), []);\n  var login = useCallback( /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(token) {\n      var response, authToken;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch(\"\".concat(API_URL, \"/rest-auth/google/\"), {\n                headers,\n                method: \"POST\",\n                body: JSON.stringify({\n                  access_token: token.accessToken,\n                  code: \"\"\n                })\n              });\n\n            case 2:\n              response = _context2.sent;\n              _context2.next = 5;\n              return response.json();\n\n            case 5:\n              authToken = _context2.sent;\n              localStorage.setItem(AUTH_TOKEN_STORAGE_KEY, authToken.key);\n              refreshAuthStatus();\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x) {\n      return _ref5.apply(this, arguments);\n    };\n  }(), [refreshAuthStatus]);\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Global, {\n    styles: css(_templateObject2(), theme.colors.white.background, theme.fontFamily.body, theme.fontFamily.heading),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Wrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, isAuthenticated ? /*#__PURE__*/React.createElement(Switch, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Home,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n    buttonText: \"Login with Google\",\n    onSuccess: function onSuccess(token) {\n      return login(token);\n    },\n    onFailure: function onFailure(err) {\n      return console.log(err);\n    },\n    cookiePolicy: \"single_host_origin\",\n    isSignedIn: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/jonathannicholas/Desktop/reactstuff/todo/web/src/components/Routes.tsx"],"names":["React","useState","useCallback","useMemo","BrowserRouter","Switch","Route","theme","css","Global","ThemeProvider","Home","styled","GoogleLogin","AUTH_TOKEN_STORAGE_KEY","API_URL","headers","Wrapper","div","breakpoints","s","transitions","boom","transition","colors","white","base","Routes","user","setUser","value","Boolean","localStorage","getItem","isAuthenticated","setIsAuthenticated","console","log","refreshAuthStatus","getUser","fetch","method","response","json","login","token","body","JSON","stringify","access_token","accessToken","code","authToken","setItem","key","background","fontFamily","heading","process","env","REACT_APP_GOOGLE_CLIENT_ID","err"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useMemo } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { theme } from \"../utils/theme\";\nimport { css, Global, ThemeProvider } from \"@emotion/react\";\nimport \"typeface-overpass\";\nimport { Home } from \"../pages\";\nimport styled from \"@emotion/styled\";\nimport GoogleLogin from \"react-google-login\";\nimport { AUTH_TOKEN_STORAGE_KEY, API_URL, headers } from \"../constants\";\nimport { User } from \"../utils/types\";\n\nconst Wrapper = styled.div`\n  margin: 15px 20vw;\n  @media (max-width: ${({ theme }) => theme.breakpoints.s}) {\n    margin: 10px;\n  }\n  transition: ${({ theme }) => theme.transitions.boom.transition};\n  color: ${({ theme }) => theme.colors.white.base};\n  font-weight: bold;\n  overflow: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nexport const Routes: React.FC = () => {\n  const [user, setUser] = useState<User | null>(null);\n  const value = useMemo(() => ({ user, setUser }), [user, setUser]);\n\n  const [isAuthenticated, setIsAuthenticated] = useState(\n    Boolean(localStorage.getItem(AUTH_TOKEN_STORAGE_KEY))\n  );\n  console.log(isAuthenticated);\n  const refreshAuthStatus = useCallback(() => {\n    setIsAuthenticated(Boolean(localStorage.getItem(AUTH_TOKEN_STORAGE_KEY)));\n  }, []);\n\n  const getUser = useCallback(async () => {\n    const response = await fetch(`${API_URL}/todos/current-user`, {\n      headers,\n      method: \"GET\",\n    });\n    const json = await response.json();\n    console.log(json);\n  }, []);\n\n  const login = useCallback(\n    async (token: any) => {\n      const response = await fetch(`${API_URL}/rest-auth/google/`, {\n        headers,\n        method: \"POST\",\n        body: JSON.stringify({ access_token: token.accessToken, code: \"\" }),\n      });\n      const authToken = await response.json();\n      localStorage.setItem(AUTH_TOKEN_STORAGE_KEY, authToken.key);\n      refreshAuthStatus();\n    },\n    [refreshAuthStatus]\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Global\n        styles={css`\n          *,\n          *:before,\n          *:after {\n            box-sizing: border-box;\n            margin: 0;\n            padding: 0;\n          }\n          html {\n            text-rendering: optimizeLegibility;\n            overflow-x: hidden;\n            -ms-overflow-style: scrollbar;\n            -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n            -webkit-font-smoothing: antialiased;\n            -moz-osx-font-smoothing: grayscale;\n          }\n          body {\n            display: flex;\n            flex-direction: column;\n            background: ${theme.colors.white.background};\n            font-family: ${theme.fontFamily.body};\n            background-color: #8ec5fc;\n            background-image: linear-gradient(62deg, #8ec5fc 0%, #e0c3fc 100%);\n          }\n          h1 {\n            font-family: ${theme.fontFamily.heading};\n          }\n          input {\n            border: none;\n          }\n          button {\n            cursor: pointer;\n          }\n          textarea:focus,\n          button:focus,\n          input:focus {\n            outline: none;\n          }\n        `}\n      />\n      <BrowserRouter>\n        <Wrapper>\n          {isAuthenticated ? (\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n            </Switch>\n          ) : (\n            <GoogleLogin\n              clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID!}\n              buttonText=\"Login with Google\"\n              onSuccess={(token) => login(token)}\n              onFailure={(err) => console.log(err)}\n              cookiePolicy={\"single_host_origin\"}\n              isSignedIn={true}\n            />\n          )}\n        </Wrapper>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}