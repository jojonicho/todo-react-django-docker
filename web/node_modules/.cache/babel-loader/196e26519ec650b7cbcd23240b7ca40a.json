{"ast":null,"code":"import _slicedToArray from \"/Users/jonathannicholas/Desktop/devhaus/todo/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/jonathannicholas/Desktop/devhaus/todo/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/jonathannicholas/Desktop/devhaus/todo/web/src/components/Todo/index.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  input {\\n    width: 40vw;\\n  }\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport { Container, RowContainer, Title, Button, Input } from \"../../ui-kit\";\nimport { ReactComponent as Check } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../static/check.svg\";\nimport { ReactComponent as Uncheck } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../static/uncheck.svg\";\nimport styled from \"@emotion/styled/\";\nimport { useForm } from \"react-hook-form\";\nvar Form = styled.form(_templateObject());\nexport var Todo = function Todo(_ref) {\n  var todo = _ref.todo,\n      updateTodo = _ref.updateTodo,\n      deleteTodo = _ref.deleteTodo;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      edit = _useState2[0],\n      setEdit = _useState2[1];\n\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit;\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(RowContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, todo.completed ? /*#__PURE__*/React.createElement(Check, {\n    onClick: function onClick() {\n      return updateTodo(todo.id, todo.name, !todo.completed);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(Uncheck, {\n    onClick: function onClick() {\n      return updateTodo(todo.id, todo.name, !todo.completed);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), edit ? /*#__PURE__*/React.createElement(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: todo.name,\n    autoFocus: true,\n    onChange: console.log(\"\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"RED\",\n    onClick: function onClick() {\n      return deleteTodo(todo.id);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Update\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, todo.completed ? /*#__PURE__*/React.createElement(\"s\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 38\n    }\n  }, todo.name) : todo.name), /*#__PURE__*/React.createElement(RowContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      return setEdit(function (v) {\n        return !v;\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"RED\",\n    onClick: function onClick() {\n      return deleteTodo(todo.id);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, \"Delete\")))));\n};","map":{"version":3,"sources":["/Users/jonathannicholas/Desktop/devhaus/todo/web/src/components/Todo/index.tsx"],"names":["React","useState","Container","RowContainer","Title","Button","Input","styled","useForm","Form","form","Todo","todo","updateTodo","deleteTodo","edit","setEdit","handleSubmit","completed","id","name","console","log","v"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,KAAlC,EAAyCC,MAAzC,EAAiDC,KAAjD,QAA8D,cAA9D;;;AAGA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAQA,IAAMC,IAAI,GAAGF,MAAM,CAACG,IAAV,mBAAV;AASA,OAAO,IAAMC,IAAyB,GAAG,SAA5BA,IAA4B,OAAsC;AAAA,MAAnCC,IAAmC,QAAnCA,IAAmC;AAAA,MAA7BC,UAA6B,QAA7BA,UAA6B;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,kBACrDb,QAAQ,CAAC,KAAD,CAD6C;AAAA;AAAA,MACtEc,IADsE;AAAA,MAChEC,OADgE;;AAAA,iBAEpDR,OAAO,EAF6C;AAAA,MAErES,YAFqE,YAErEA,YAFqE;;AAG7E,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IAAI,CAACM,SAAL,gBACC,oBAAC,KAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAML,UAAU,CAACD,IAAI,CAACO,EAAN,EAAUP,IAAI,CAACQ,IAAf,EAAqB,CAACR,IAAI,CAACM,SAA3B,CAAhB;AAAA,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAKC,oBAAC,OAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAML,UAAU,CAACD,IAAI,CAACO,EAAN,EAAUP,IAAI,CAACQ,IAAf,EAAqB,CAACR,IAAI,CAACM,SAA3B,CAAhB;AAAA,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAUGH,IAAI,gBACH,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEH,IAAI,CAACQ,IAAnB;AAAyB,IAAA,SAAS,MAAlC;AAAmC,IAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAY,EAAZ,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAoB,IAAA,OAAO,EAAE;AAAA,aAAMR,UAAU,CAACF,IAAI,CAACO,EAAN,CAAhB;AAAA,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADG,gBAQH,uDACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQP,IAAI,CAACM,SAAL,gBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIN,IAAI,CAACQ,IAAT,CAAjB,GAAsCR,IAAI,CAACQ,IAAnD,CADF,eAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMJ,OAAO,CAAC,UAACO,CAAD;AAAA,eAAO,CAACA,CAAR;AAAA,OAAD,CAAb;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAoB,IAAA,OAAO,EAAE;AAAA,aAAMT,UAAU,CAACF,IAAI,CAACO,EAAN,CAAhB;AAAA,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CAFF,CAlBJ,CADF,CADF;AAiCD,CApCM","sourcesContent":["import React, { useState } from \"react\";\nimport { TodoType } from \"../../utils/types\";\nimport { Container, RowContainer, Title, Button, Input } from \"../../ui-kit\";\nimport { ReactComponent as Check } from \"../../static/check.svg\";\nimport { ReactComponent as Uncheck } from \"../../static/uncheck.svg\";\nimport styled from \"@emotion/styled/\";\nimport { useForm } from \"react-hook-form\";\n\ninterface TodoProps {\n  todo: TodoType;\n  updateTodo: any;\n  deleteTodo: any;\n}\n\nconst Form = styled.form`\n  input {\n    width: 40vw;\n  }\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Todo: React.FC<TodoProps> = ({ todo, updateTodo, deleteTodo }) => {\n  const [edit, setEdit] = useState(false);\n  const { handleSubmit } = useForm();\n  return (\n    <Container>\n      <RowContainer>\n        {todo.completed ? (\n          <Check\n            onClick={() => updateTodo(todo.id, todo.name, !todo.completed)}\n          />\n        ) : (\n          <Uncheck\n            onClick={() => updateTodo(todo.id, todo.name, !todo.completed)}\n          />\n        )}\n        {edit ? (\n          <Form>\n            <Input value={todo.name} autoFocus onChange={console.log(\"\")} />\n            <Button color=\"RED\" onClick={() => deleteTodo(todo.id)}>\n              Update\n            </Button>\n          </Form>\n        ) : (\n          <>\n            <Title>{todo.completed ? <s>{todo.name}</s> : todo.name}</Title>\n            <RowContainer>\n              <Button onClick={() => setEdit((v) => !v)}>Edit</Button>\n              <Button color=\"RED\" onClick={() => deleteTodo(todo.id)}>\n                Delete\n              </Button>\n            </RowContainer>\n          </>\n        )}\n      </RowContainer>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}