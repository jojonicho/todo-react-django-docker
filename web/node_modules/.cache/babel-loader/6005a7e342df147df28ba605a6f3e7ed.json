{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/jonathannicholas/Desktop/reactstuff/todo/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"/Users/jonathannicholas/Desktop/reactstuff/todo/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jonathannicholas/Desktop/reactstuff/todo/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/jonathannicholas/Desktop/reactstuff/todo/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/jonathannicholas/Desktop/reactstuff/todo/web/src/components/Routes.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n          *,\\n          *:before,\\n          *:after {\\n            box-sizing: border-box;\\n            margin: 0;\\n            padding: 0;\\n          }\\n          html {\\n            text-rendering: optimizeLegibility;\\n            overflow-x: hidden;\\n            -ms-overflow-style: scrollbar;\\n            -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\\n            -webkit-font-smoothing: antialiased;\\n            -moz-osx-font-smoothing: grayscale;\\n          }\\n          body {\\n            display: flex;\\n            flex-direction: column;\\n            background: \", \";\\n            font-family: \", \";\\n            background-color: #8ec5fc;\\n            background-image: linear-gradient(62deg, #8ec5fc 0%, #e0c3fc 100%);\\n          }\\n          h1 {\\n            font-family: \", \";\\n          }\\n          input {\\n            border: none;\\n          }\\n          button {\\n            cursor: pointer;\\n          }\\n          textarea:focus,\\n          button:focus,\\n          input:focus {\\n            outline: none;\\n          }\\n        \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useCallback, useMemo, useEffect } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { theme } from \"../utils/theme\";\nimport { css, Global, ThemeProvider } from \"@emotion/react\";\nimport \"typeface-overpass\";\nimport { Home } from \"../pages\";\nimport GoogleLogin from \"react-google-login\";\nimport { AUTH_TOKEN_STORAGE_KEY, API_URL, headers } from \"../constants\";\nimport { UserContext } from \"../datastore/UserContext\";\nimport { Header } from \"./Header\";\nimport { Facebook } from \"react-content-loader\";\nexport var Routes = function Routes() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var value = useMemo(function () {\n    return {\n      user,\n      setUser\n    };\n  }, [user, setUser]);\n\n  var _useState3 = useState(Boolean(localStorage.getItem(AUTH_TOKEN_STORAGE_KEY))),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isAuthenticated = _useState4[0],\n      setIsAuthenticated = _useState4[1];\n\n  var refreshAuthStatus = useCallback(function () {\n    setIsAuthenticated(Boolean(localStorage.getItem(AUTH_TOKEN_STORAGE_KEY)));\n  }, []); // const userFetcher = async () => {\n  //   const token = localStorage.getItem(AUTH_TOKEN_STORAGE_KEY);\n  //   headers.append(\"Authorization\", `Token ${token}`);\n  //   const response = await fetch(`${API_URL}/todos/current-user`, {\n  //     headers,\n  //     method: \"GET\",\n  //   });\n  //   const json: User = await response.json();\n  //   setUser(json);\n  //   return json;\n  // };\n  // const { data } = useSWR(isAuthenticated ? \"current-user\" : null, userFetcher);\n  // console.log(data);\n\n  var logout = useCallback(function () {\n    console.log(\"yo\");\n    localStorage.removeItem(AUTH_TOKEN_STORAGE_KEY);\n    setUser(null);\n    refreshAuthStatus();\n  }, [refreshAuthStatus]);\n  useEffect(function () {\n    var getUser = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var token, response, json;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                token = localStorage.getItem(AUTH_TOKEN_STORAGE_KEY);\n\n                if (token) {\n                  headers.append(\"Authorization\", \"Token \".concat(token));\n                }\n\n                _context.prev = 2;\n                _context.next = 5;\n                return fetch(\"\".concat(API_URL, \"/todos/current-user\"), {\n                  headers,\n                  method: \"GET\"\n                });\n\n              case 5:\n                response = _context.sent;\n                _context.next = 8;\n                return response.json();\n\n              case 8:\n                json = _context.sent;\n                setUser(json);\n                _context.next = 16;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](2);\n                console.log(_context.t0);\n                setUser(null);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 12]]);\n      }));\n\n      return function getUser() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getUser();\n  }, [isAuthenticated]);\n  var login = useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(token) {\n      var response, authToken;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return fetch(\"\".concat(API_URL, \"/rest-auth/google/\"), {\n                headers,\n                method: \"POST\",\n                body: JSON.stringify({\n                  access_token: token.accessToken,\n                  code: \"\"\n                })\n              });\n\n            case 3:\n              response = _context2.sent;\n              _context2.next = 6;\n              return response.json();\n\n            case 6:\n              authToken = _context2.sent;\n              localStorage.setItem(AUTH_TOKEN_STORAGE_KEY, authToken.key);\n              refreshAuthStatus();\n              _context2.next = 15;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n              setUser(null);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 11]]);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), [refreshAuthStatus]);\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Global, {\n    styles: css(_templateObject(), theme.colors.white.background, theme.fontFamily.body, theme.fontFamily.heading),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, !isAuthenticated && !user ? /*#__PURE__*/React.createElement(Facebook, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }) : user ? /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: value,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    logout: logout,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Home,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  })))) : /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n    buttonText: \"Login with Google\",\n    onSuccess: function onSuccess(token) {\n      return login(token);\n    },\n    onFailure: function onFailure(err) {\n      return console.log(err);\n    },\n    cookiePolicy: \"single_host_origin\" // isSignedIn={true}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/jonathannicholas/Desktop/reactstuff/todo/web/src/components/Routes.tsx"],"names":["React","useState","useCallback","useMemo","useEffect","BrowserRouter","Switch","Route","theme","css","Global","ThemeProvider","Home","GoogleLogin","AUTH_TOKEN_STORAGE_KEY","API_URL","headers","UserContext","Header","Facebook","Routes","user","setUser","value","Boolean","localStorage","getItem","isAuthenticated","setIsAuthenticated","refreshAuthStatus","logout","console","log","removeItem","getUser","token","append","fetch","method","response","json","login","body","JSON","stringify","access_token","accessToken","code","authToken","setItem","key","colors","white","background","fontFamily","heading","process","env","REACT_APP_GOOGLE_CLIENT_ID","err"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useMemo, useEffect } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { theme } from \"../utils/theme\";\nimport { css, Global, ThemeProvider } from \"@emotion/react\";\nimport \"typeface-overpass\";\nimport { Home } from \"../pages\";\nimport styled from \"@emotion/styled\";\nimport GoogleLogin from \"react-google-login\";\nimport { AUTH_TOKEN_STORAGE_KEY, API_URL, headers } from \"../constants\";\nimport { User } from \"../utils/types\";\nimport { UserContext } from \"../datastore/UserContext\";\nimport { Header } from \"./Header\";\nimport useSWR from \"swr\";\nimport { Facebook } from \"react-content-loader\";\n\nexport const Routes: React.FC = () => {\n  const [user, setUser] = useState<User | null>(null);\n  const value = useMemo(() => ({ user, setUser }), [user, setUser]);\n\n  const [isAuthenticated, setIsAuthenticated] = useState(\n    Boolean(localStorage.getItem(AUTH_TOKEN_STORAGE_KEY))\n  );\n  const refreshAuthStatus = useCallback(() => {\n    setIsAuthenticated(Boolean(localStorage.getItem(AUTH_TOKEN_STORAGE_KEY)));\n  }, []);\n\n  // const userFetcher = async () => {\n  //   const token = localStorage.getItem(AUTH_TOKEN_STORAGE_KEY);\n  //   headers.append(\"Authorization\", `Token ${token}`);\n  //   const response = await fetch(`${API_URL}/todos/current-user`, {\n  //     headers,\n  //     method: \"GET\",\n  //   });\n  //   const json: User = await response.json();\n  //   setUser(json);\n  //   return json;\n  // };\n  // const { data } = useSWR(isAuthenticated ? \"current-user\" : null, userFetcher);\n  // console.log(data);\n\n  const logout = useCallback(() => {\n    console.log(\"yo\");\n    localStorage.removeItem(AUTH_TOKEN_STORAGE_KEY);\n    setUser(null);\n    refreshAuthStatus();\n  }, [refreshAuthStatus]);\n\n  useEffect(() => {\n    const getUser = async () => {\n      const token = localStorage.getItem(AUTH_TOKEN_STORAGE_KEY);\n      if (token) {\n        headers.append(\"Authorization\", `Token ${token}`);\n      }\n      try {\n        const response = await fetch(`${API_URL}/todos/current-user`, {\n          headers,\n          method: \"GET\",\n        });\n        const json = await response.json();\n        setUser(json);\n      } catch (e) {\n        console.log(e);\n        setUser(null);\n      }\n    };\n    getUser();\n  }, [isAuthenticated]);\n\n  const login = useCallback(\n    async (token: any) => {\n      try {\n        const response = await fetch(`${API_URL}/rest-auth/google/`, {\n          headers,\n          method: \"POST\",\n          body: JSON.stringify({ access_token: token.accessToken, code: \"\" }),\n        });\n        const authToken = await response.json();\n        localStorage.setItem(AUTH_TOKEN_STORAGE_KEY, authToken.key);\n        refreshAuthStatus();\n      } catch (e) {\n        console.log(e);\n        setUser(null);\n      }\n    },\n    [refreshAuthStatus]\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Global\n        styles={css`\n          *,\n          *:before,\n          *:after {\n            box-sizing: border-box;\n            margin: 0;\n            padding: 0;\n          }\n          html {\n            text-rendering: optimizeLegibility;\n            overflow-x: hidden;\n            -ms-overflow-style: scrollbar;\n            -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n            -webkit-font-smoothing: antialiased;\n            -moz-osx-font-smoothing: grayscale;\n          }\n          body {\n            display: flex;\n            flex-direction: column;\n            background: ${theme.colors.white.background};\n            font-family: ${theme.fontFamily.body};\n            background-color: #8ec5fc;\n            background-image: linear-gradient(62deg, #8ec5fc 0%, #e0c3fc 100%);\n          }\n          h1 {\n            font-family: ${theme.fontFamily.heading};\n          }\n          input {\n            border: none;\n          }\n          button {\n            cursor: pointer;\n          }\n          textarea:focus,\n          button:focus,\n          input:focus {\n            outline: none;\n          }\n        `}\n      />\n      <BrowserRouter>\n        {!isAuthenticated && !user ? (\n          <Facebook />\n        ) : user ? (\n          <UserContext.Provider value={value}>\n            <Header logout={logout}>\n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n              </Switch>\n            </Header>\n          </UserContext.Provider>\n        ) : (\n          <GoogleLogin\n            clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID!}\n            buttonText=\"Login with Google\"\n            onSuccess={(token) => login(token)}\n            onFailure={(err) => console.log(err)}\n            cookiePolicy={\"single_host_origin\"}\n            // isSignedIn={true}\n          />\n        )}\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}